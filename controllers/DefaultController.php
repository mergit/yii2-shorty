<?php

namespace mergit\shorty\controllers;

//use app\components\Shorty;
use mergit\shorty\components\Shorty;
use mergit\shorty\models\Shortlink;
use mergit\shorty\models\Statistic;
use lysenkobv\GeoIP\GeoIP;
use yii\helpers\ArrayHelper;
use yii\helpers\Url;
use yii\web\Controller;
use Yii;
use yii\web\NotFoundHttpException;

/**
 * Default controller for the `shorty` module
 */
class DefaultController extends Controller
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

    }

    /**
     * Renders the index view for the module
     * @return string
     * @throws NotFoundHttpException
     */
    public function actionIndex()
    {

        //Yii::$app->getModule('shorty')->shorty->getShortUrl(123);
        if (Yii::$app->request->isAjax) {

            $model = new Shortlink();
            $url[2] = Url::toRoute('/', true);
            if ($model->load(Yii::$app->request->post())) {

                if ($old_model = $this->findModelById($model->id)) {

                    $old_model->custom_url = $model->custom_url;

                    $url[0] = Url::toRoute(['default/index', 'q' => $old_model->custom_url], true);
                    $url[1] = Url::toRoute(['statistic/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($old_model->id)], true);
                    $url[3] = str_replace('/', '', Url::toRoute(['default/index', 'q' => $old_model->custom_url], false));


                    if ($old_model->save()) {
                        return json_encode(array($url, $old_model->id, 1 , 'Ваш короткий линк сохранен!'));
                    } else {
                        $url[0] = Url::toRoute(['default/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($old_model->id)], true);
                        $url[3] = str_replace('/', '', Url::toRoute(['default/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($model->id)], false));
                        return json_encode(array($url, $old_model->id, 2 , 'Возможно, линк не уникален'));
                    }
                }

                if ($model->save()) {
                    $url[0] = Url::toRoute(['default/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($model->id)], true);
                    $url[1] = Url::toRoute(['statistic/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($model->id)], true);
                    $url[3] = str_replace('/', '', Url::toRoute(['default/index', 'q' => Yii::$app->getModule('shorty')->shorty->getShortUrl($model->id)], false));

                    return (json_encode(array($url, $model->id, 0 , 'Вы можете попробовать получить собственный линк:',)));

                }
            }
            return ('some error...');
        }

        if (Yii::$app->request->get()) {

            $id = Yii::$app->getModule('shorty')->shorty->getId(Yii::$app->request->get('q'));
            $model = $this->findModel($id, Yii::$app->request->get('q'));
            if(($model->available_at == NULL) || (time() < strtotime($model->available_at))) {
                $stat = new Statistic();
                $stat->shortlink_id = $model->id;
                $stat->ip = Yii::$app->request->userIP;
                $stat->useragent = Yii::$app->request->userAgent;
                $geoip = new GeoIP();
                $ip = $geoip->ip($stat->ip);
                //$ip = $geoip->ip('208.113.83.165');
                //$ip = $geoip->ip('78.130.144.70');
                $stat->country = $ip->country;
                $stat->save();
                $this->redirect($model->url,301);

            }

        }



        $model = new Shortlink();

        return $this->render('index', [
            'model' => $model,
        ]);
    }

    /**
     * Finds the Shortlink model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @param string $q
     * @return Shortlink the loaded model
     * @throws NotFoundHttpException
     */
    protected function findModel($id , $q='')
    {
        if (($model = Shortlink::find()->andWhere(['custom_url'=> $q])->one()) !== null) {
            return $model;
        } elseif (($model = Shortlink::find()->andWhere(['id'=>$id])->one()) !== null) {
            return $model;
        }

        throw new NotFoundHttpException('The requested page does not exist.');
    }

    /**
     * @param $id
     * @return array|null|\yii\db\ActiveRecord
     */
    protected function findModelById($id)
    {
        if (($model = Shortlink::find()->andWhere(['id'=>$id])->one()) !== null) {
            return $model;
        }

        return false;
    }

}
